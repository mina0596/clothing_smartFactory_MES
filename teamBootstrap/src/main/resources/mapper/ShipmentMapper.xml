<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart39.springboot.dao.ShipmentMapper">
<resultMap type="ShipmentOrder" id="shipmentOrder">
	<result property="shipmentOrderCode" column="shipment_order_code"/>
	<result property="requestProductCode" column="requested_product_code"/>
	<result property="chargeEmployeeCode" column="charge_employee_code"/>
	<result property="shipmentOrderGroupCode" column="shipment_order_group_code"/>
	<result property="shipmentOrderDate" column="shipment_order_date"/>
	<result property="shipmentOrderContractState" column="shipment_order_contract_state"/>
	<result property="shipmentOderRegDate" column="shipment_order_reg_date"/>
	<result property="shimpentOrderUpdateDate" column="shipment_order_reg_update_date"/>
	<association property="humanResources" javaType="humanResources">
	<result property="employeeName" column="employee_name"/>
	</association>
	<association property="requestedProduct" javaType="requestedProduct">
	<result property="productRequestCode" column="product_request_code"/>
	<result property="contractCode" column="contract_code"/>
	</association>
	<association property="client" javaType="client">
	<result property="clientName" column="client_name"/>
	</association>
	<association property="productCodeDetail" javaType="productCodeDetail">
	<result property="detailedCategorizedName" column="detailed_categorized_name"/>
	<result property="genderCategorizedName" column="gender_categorized_name"/>
	</association>
</resultMap>
<!--출하지시 삭제-->
<delete id="deleteShipmentOrder" parameterType="String">
DELETE  FROM shipment_order
WHERE shipment_order_code =#{checkArray};
</delete>


<!--출하지시 수정  -->
<update id="modifyShipmentOrder" parameterType="ShipmentOrder">
UPDATE 	shipment_order AS s
		INNER JOIN 
			requested_product_detail AS r
		ON s.requested_product_code = r.requested_product_code
		INNER JOIN
			client_info AS c
		ON r.client_code =c.client_code
		INNER JOIN
			product_code_detail AS p
		ON r.product_code =p.product_code
		INNER join
		employee_info AS e
		ON s.charge_employee_code = e.employee_code
	<trim prefix="SET" prefixOverrides=",">	
		<if test="requestedProduct.contractCode != null and requestedProduct.contractCode != ''.toString()">
		r.contract_code=#{requestedProduct.contractCode}
		</if>
		<if test="client.clientName != null and client.clientName != ''.toString()">
		,c.client_name=#{client.clientName}
		</if>
		<if test="shipmentOrderGroupCode != null and shipmentOrderGroupCode != ''.toString()">
		,s.shipment_order_group_code=#{shipmentOrderGroupCode}
		</if>
		<if test="shipmentOrderCode != null and shipmentOrderCode != ''.toString()">
		,s.shipment_order_code=#{shipmentOrderCode}
		</if>
		<if test="requestedProduct.productRequestCode != null and requestedProduct.productRequestCode != ''.toString()">
		,r.product_request_code=#{requestedProduct.productRequestCode}
		</if>
		<if test="requestProductCode != null and requestProductCode != ''.toString()">
		,s.requested_product_code=#{requestProductCode}
		</if>
		<if test="productCodeDetail.genderCategorizedName != null and productCodeDetail.genderCategorizedName != ''.toString()">
		,p.gender_categorized_name=#{productCodeDetail.genderCategorizedName}
		</if>
		<if test="productCodeDetail.detailedCategorizedName != null and productCodeDetail.detailedCategorizedName != ''.toString()">
		,p.detailed_categorized_name=#{productCodeDetail.detailedCategorizedName}
		</if>
		<if test="shipmentOrderContractState != null and shipmentOrderContractState != ''.toString()">
		,s.shipment_order_contract_state=#{shipmentOrderContractState}
		</if>
		<if test="shipmentOrderDate != null and shipmentOrderDate != ''.toString()">
		,s.shipment_order_date =#{shipmentOrderDate}
		</if>
		</trim>
	WHERE s.shipment_order_code=#{shipmentOrderCode}


</update>
<!--출하지시 정보 -->
<select id="shipmentOrderInfo" parameterType="String" resultMap="shipmentOrder">
SELECT
      c.client_name,
		s.shipment_order_group_code,
		s.shipment_order_code,
		r.product_request_code,
		s.requested_product_code,
		r.contract_code,
		p.detailed_categorized_name,
		p.gender_categorized_name,
		s.charge_employee_code,
		e.employee_name,
		s.shipment_order_contract_state,
		s.shipment_order_date,
		s.shipment_order_reg_date
	FROM
		shipment_order AS s
	INNER JOIN 
		requested_product_detail AS r
	ON s.requested_product_code = r.requested_product_code
	INNER JOIN
		client_info AS c
	ON r.client_code =c.client_code
	INNER JOIN
		product_code_detail AS p
	ON r.product_code =p.product_code
	INNER join
	employee_info AS e
	ON s.charge_employee_code = e.employee_code
	WHERE s.shipment_order_code =#{shipmentOrderCode}
</select>
<!-- 출하지시 등록시  의뢰품목코드 중복체크 -->
<select id="checkProduct"  parameterType="String" resultType="Integer" >
SELECT
	 COUNT(*) 
	FROM
		shipment_order AS s
	
	WHERE 
	s.requested_product_code =#{shipmentOrderProduectCode}
</select>


<!--출하지시등록  -->
<insert id="addShipmentOrder" parameterType="map">
INSERT INTO shipment_order
	(shipment_order_code, requested_product_code,
	 charge_employee_code,
	 shipment_order_group_code,
	 shipment_order_date,
	 shipment_order_product_name,
	  shipment_order_contract_state, 
	  shipment_order_reg_date, 
	  shipment_order_reg_update_date)
	VALUES (sf_shipmentOrder2(),
	 #{shipmentOrderProduectCode},
	  #{chargeEmployeeCode},
	  sf_shipmentOrderGroup(#{shipmentRequestCode}),
	  #{shipmentOrderDate},
	  #{shipmentOrderProductName} ,
	   #{contractState},
	  NOW(), 
	NOW())


</insert>


<!--출하등록 완성품목록 거래처 조회 -->
<select id="searchCompletClientName" resultType="map">
	SELECT
	r.product_request_code AS requestCode,
	c.requested_product_code AS requestProductCode,
	r.contract_code AS contractCode,
	cl.client_name AS clientName,
	p.detailed_categorized_name AS productName,
	r.requested_delivery_address AS deliveryAddress,
	r.requested_delivery_tel AS deliveryTel,
	DATE_Format(c.completed_product_reg_date, '%Y-%m-%d %T') AS completeRegDate
	FROM
	completed_product_list AS c
	INNER JOIN
	requested_product_detail AS r
	ON c.requested_product_code = r.requested_product_code
	INNER JOIN
	client_info AS cl
	ON r.client_code = cl.client_code
	INNER JOIN
	product_code_detail AS p
	ON r.product_code = p.product_code
	<trim prefix="WHERE" >	
	<if test="clientName != null and clientName != ''.toString()">	
	cl.client_name LIKE CONCAT ('%',#{clientName},'%')
	</if>
	</trim>
	ORDER BY r.product_request_code;
</select>
<!--출하등록 완성품목록 계약코드 조회 -->
<select id="searchCompletContract" resultType="map">
	SELECT
	r.product_request_code AS requestCode,
	c.requested_product_code AS requestProductCode,
	r.contract_code AS contractCode,
	cl.client_name AS clientName,
	p.detailed_categorized_name AS productName,
	r.requested_delivery_address AS deliveryAddress,
	r.requested_delivery_tel AS deliveryTel,
	DATE_Format(c.completed_product_reg_date, '%Y-%m-%d %T') AS completeRegDate
	FROM
	completed_product_list AS c
	INNER JOIN
	requested_product_detail AS r
	ON c.requested_product_code = r.requested_product_code
	INNER JOIN
	client_info AS cl
	ON r.client_code = cl.client_code
	INNER JOIN
	product_code_detail AS p
	ON r.product_code = p.product_code
	<trim prefix="WHERE" >	
	<if test="contractCode != null and contractCode != ''.toString()">	
	 r.contract_code LIKE CONCAT ('%',#{contractCode},'%')
	</if>
	</trim>
	ORDER BY 	r.product_request_code
</select>

<!-- 출하지시 조회 -->
<select id="getsearchShipmentOrder" parameterType="hashmap" resultType="map">
	SELECT
		s.shipment_order_code AS shipmentOrderCode,
		c.client_name AS clientName,
		p.gender_categorized_name AS productName,
		s.shipment_order_date AS shipmentOrderDate,
DATE_FORMAT(s.shipment_order_reg_date,'%Y-%m-%d %T') AS shipmentRegDate
	FROM
		shipment_order AS s
	INNER JOIN 
		requested_product_detail AS r
	ON s.requested_product_code = r.requested_product_code
	INNER JOIN
		client_info AS c
	ON r.client_code =c.client_code
	INNER JOIN
		product_code_detail AS p
	ON r.product_code =p.product_code
	<trim prefix="WHERE" prefixOverrides="AND">	
	<if test="shipmentOrderCode != null and shipmentOrderCode != ''.toString()">	
	AND	s.shipment_order_code LIKE CONCAT ('%', #{shipmentOrderCode},'%')
	</if>
	<if test="clientName != null and clientName != ''.toString()">	
	AND c.client_name LIKE CONCAT ('%', #{clientName},'%')
	</if>
	<if test="productName != null and productName != ''.toString()">	
	AND	p.gender_categorized_name  LIKE CONCAT ('%',#{productName},'%')
	</if>
	<if test="shipmentOrderDate != null and shipmentOrderDate != ''.toString()">	
	AND s.shipment_order_date &lt; = DATE#{shipmentOrderDate}
	</if>
	</trim>

</select>
<!--출하지시목록  -->
<select id="getShipmentOrderList" resultType="map">
	SELECT
		s.shipment_order_code AS shipmentOrderCode,
		c.client_name AS clientName,
		p.gender_categorized_name AS productName,
		s.shipment_order_date AS shipmentOrderDate,
		s.shipment_order_reg_date AS shipmentRegDate
	FROM
		shipment_order AS s
	INNER JOIN 
		requested_product_detail AS r
	ON s.requested_product_code = r.requested_product_code
	INNER JOIN
		client_info AS c
	ON r.client_code =c.client_code
	INNER JOIN
		product_code_detail AS p
	ON r.product_code =p.product_code
	</select>
<!-- -->
<!-- 송장목록  -->
<select id="getShipmentInvoiceList" resultType="map">
	SELECT
		si.shipment_invoice_code AS invoiceCode,
		si.shipment_order_group_code AS shipmentOrderGroup,
		c.client_name AS clientName,
		re.product_request_code AS requestCode,
		si.courier_company_name AS invoiceClientName,
		re.requested_delivery_address AS reqeustAddress,
		DATE_FORMAT(si.shipment_invoice_reg_date,'%Y-%m-%d %T') AS invoiceRegDate
	FROM
		shipment_invoice AS si
	INNER JOIN
		shipment_order AS sh
	ON si.shipment_order_group_code = sh.shipment_order_group_code
	inner JOIN
		requested_product_detail AS re
	ON sh.requested_product_code= re.requested_product_code
	INNER JOIN
		client_info AS c
	ON si.client_code =c.client_code 
	GROUP by si.shipment_invoice_code;

</select>
<!-- 송장목록 송장번호조회  -->

<select id="searchInvoiceCode" resultType="map">
	SELECT
			si.shipment_invoice_code AS invoiceCode,
			si.shipment_order_group_code AS shipmentOrderGroup,
			c.client_name AS clientName,
			re.product_request_code AS requestCode,
			si.courier_company_name AS invoiceClientName,
			re.requested_delivery_address AS reqeustAddress,
			DATE_FORMAT(si.shipment_invoice_reg_date,'%Y-%m-%d %T') AS invoiceRegDate
		FROM
			shipment_invoice AS si
		INNER JOIN
			shipment_order AS sh
		ON si.shipment_order_group_code = sh.shipment_order_group_code
		inner JOIN
			requested_product_detail AS re
		ON sh.requested_product_code= re.requested_product_code
		INNER JOIN
			client_info AS c
		ON si.client_code =c.client_code 
		WHERE
			 si.shipment_invoice_code =#{shipmentInvoiceCode}
		GROUP by si.shipment_invoice_code;
</select>

<!--송장 거래처조회 -->
<select id="searchClientCate" resultType="map">
    SELECT
			si.shipment_invoice_code AS invoiceCode,
			si.shipment_order_group_code AS shipmentOrderGroup,
			c.client_name AS clientName,
			re.product_request_code AS requestCode,
			si.courier_company_name AS invoiceClientName,
			re.requested_delivery_address AS reqeustAddress,
			DATE_FORMAT(si.shipment_invoice_reg_date,'%Y-%m-%d %T') AS invoiceRegDate
		FROM
			shipment_invoice AS si
		INNER JOIN
			shipment_order AS sh
		ON si.shipment_order_group_code = sh.shipment_order_group_code
		inner JOIN
			requested_product_detail AS re
		ON sh.requested_product_code= re.requested_product_code
		INNER JOIN
			client_info AS c
		ON si.client_code =c.client_code 
	<trim prefix="WHERE" prefixOverrides="AND">	
	<if test="client != null and client != ''.toString()">	
			 	c.client_name LIKE CONCAT('%',#{client},'%')
	 	</if>
	 	</trim>
		GROUP by si.shipment_invoice_code;
</select>

<!--송장택배사 조회 -->
<select id="searchInvoiceClient" resultType="map">
	SELECT
			si.shipment_invoice_code AS invoiceCode,
			si.shipment_order_group_code AS shipmentOrderGroup,
			c.client_name AS clientName,
			re.product_request_code AS requestCode,
			si.courier_company_name AS invoiceClientName,
			re.requested_delivery_address AS reqeustAddress,
			DATE_FORMAT(si.shipment_invoice_reg_date,'%Y-%m-%d %T') AS invoiceRegDate
		FROM
			shipment_invoice AS si
		INNER JOIN
			shipment_order AS sh
		ON si.shipment_order_group_code = sh.shipment_order_group_code
		inner JOIN
			requested_product_detail AS re
		ON sh.requested_product_code= re.requested_product_code
		INNER JOIN
			client_info AS c
		ON si.client_code =c.client_code 	
	<trim prefix="WHERE">	
		<if test="invoiceClient != null and invoiceClient != ''.toString()">	
		 	si.courier_company_name LIKE CONCAT ('%',#{invoiceClient},'%')
		 	</if>
		</trim>
		GROUP by si.shipment_invoice_code;
		
</select>
<!-- 송장등록일 조회  -->
<select id="searchInvoiceRegDate" resultType="map">

	SELECT
			si.shipment_invoice_code AS invoiceCode,
			si.shipment_order_group_code AS shipmentOrderGroup,
			c.client_name AS clientName,
			re.product_request_code AS requestCode,
			si.courier_company_name AS invoiceClientName,
			re.requested_delivery_address AS reqeustAddress,
			DATE_FORMAT(si.shipment_invoice_reg_date,'%Y-%m-%d %T') AS invoiceRegDate
		FROM
			shipment_invoice AS si
		INNER JOIN
			shipment_order AS sh
		ON si.shipment_order_group_code = sh.shipment_order_group_code
		inner JOIN
			requested_product_detail AS re
		ON sh.requested_product_code= re.requested_product_code
		INNER JOIN
			client_info AS c
		ON si.client_code =c.client_code 
		<trim prefix="WHERE">	
		<if test="invoiceRegDate != null and invoiceRegDate != ''.toString()">
		 		si.shipment_invoice_reg_date LIKE CONCAT ('%',#{invoiceRegDate},'%')
	 		</if>
	 		</trim>	 		
		GROUP by si.shipment_invoice_code;
		
		</select>
</mapper>