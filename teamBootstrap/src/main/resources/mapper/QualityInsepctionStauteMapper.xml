<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart39.springboot.dao.QualityInsepctionStauteMapper">
<!--계약별 품질검사 조회  -->
<select id="getSearchQualityInspectionState" parameterType="hashmap" resultType="map">
	SELECT
			p.contract_code AS contractCode
			,c.client_name AS clientName	
			,re.quality_inspection_request_code as inspectionRequestCode
			,high.high_class_name AS highClassName
			,med.med_class_name AS medClassName
			,low.low_class_name AS lowClassName
			,sub.sub_class_name AS subClassName
			,p.requested_product_code AS requestProductCode
			,pc.detailed_categorized_name AS detailedCateName
			,DATE_FORMAT(q.inspection_request_date,'%Y-%m-%d %T') AS inspectionRequestDate
			,res.category AS inspectionCategory
			,IFNULL(res.standard_tolerance,'합격/불합격') AS standardTolerance
			,re.min_tolerance AS minTolerance
			,re.max_tolerance AS maxTolerance
			,IFNULL(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_pass_check, NULL)),'검사시작전') AS insFirst
			,IFNULL(group_concat(if(re.inspection_measurement_num='2회차', re.inspection_pass_check, NULL)),'검사시작전') AS insSecond
			,IFNULL(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_pass_check, NULL)),'검사시작전') AS insThird	
			,IFNULL(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_start_date, NULL)),'검사시작전') AS insStart
			,IFNULL(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_end_date, NULL)),'검사시작전') AS insEnd
			,IFNULL(ref.low_cate_final_pass_check,'심사중') AS finalPassCheck
				
		FROM
			requested_product_detail AS p
		INNER JOIN
			quality_inspection_request AS q ON p.requested_product_code = q.requested_product_code
		LEFT JOIN
			inspection_result AS re ON q.quality_inspection_request_code = re.quality_inspection_request_code
		LEFT JOIN
			inspection_final_result AS ref ON re.quality_inspection_request_code = ref.quality_inspection_request_code
		INNER JOIN
			inspection_standard AS res ON q.quality_inspection_code = res.quality_inspection_code
		INNER JOIN
			sub_class_inspection_list AS sub ON q.quality_inspection_code = sub.quality_inspection_code
		INNER JOIN
			low_class_inspection_list AS low ON sub.high_med_low_class_code = low.high_med_low_class_code
		INNER JOIN
			medium_class_inspection_list AS med ON low.high_med_class_code = med.high_med_class_code
		INNER JOIN
			high_class_inspection_list AS high ON med.high_class_code = high.high_class_code
		INNER JOIN
			product_code_detail AS pc ON p.product_code = pc.product_code
		INNER JOIN
			client_info AS c ON p.client_code = c.client_code
	<trim prefix="WHERE" prefixOverrides="AND">	
	 AND re.quality_inspection_request_code  LIKE 'QC%'
	 <if test="bySupplierValue != null and bySupplierValue != ''.toString()">	
	 AND  p.contract_code = #{bySupplierValue}
	 </if>
	 <if test="clientName != null and clientName != ''.toString()">	
	 AND c.client_name= #{clientName}
	 </if>
	 <if test="requestProductName != null and requestProductName != ''.toString()">	
	 AND pc.detailed_categorized_name = #{requestProductName}
	 </if>
	 <if test="inspectionStartDate != null and inspectionStartDate != ''.toString()">	
	 AND  re.inspection_start_date = #{inspectionStartDate}
	 </if>
	 <if test="inspectionEndDate != null and inspectionEndDate != ''.toString()">	
	AND re.inspection_end_date = #{inspectionEndDate}
	</if>
	</trim>
	GROUP BY q.quality_inspection_request_code;


</select>


<!--계약별 품질검사 전체현황-->
<select id="getStateBuyerContractQualityInspection" resultType="map">
	SELECT
			p.contract_code AS contractCode	
			,re.quality_inspection_request_code as inspectionRequestCode
			,high.high_class_name AS highClassName
			,med.med_class_name AS medClassName
			,low.low_class_name AS lowClassName
			,sub.sub_class_name AS subClassName
			,p.requested_product_code AS requestProductCode
			,pc.detailed_categorized_name AS detailedCateName
			,q.inspection_request_date AS inspectionRequestDate
			,res.category AS inspectionCategory
			,IFNULL(res.standard_tolerance,'합격/불합격') AS standardTolerance
			,IFNULL(res.min_value,'0') AS minTolerance
			,IFNULL(res.max_value,'0') AS maxTolerance
			,IFNULL(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_measurement_value, NULL)),'비교') AS insFirst
			,IFNULL(group_concat(if(re.inspection_measurement_num='2회차', re.inspection_measurement_value, NULL)),'비교') AS insSecond
			,IFNULL(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_measurement_value, NULL)),'비교') AS insThird	
			,IFNULL(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_pass_check, NULL)),'검사시작전') AS insFirstCheck
			,IFNULL(group_concat(if(re.inspection_measurement_num='2회차', re.inspection_pass_check, NULL)),'검사시작전') AS insSecondCheck
			,IFNULL(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_pass_check, NULL)),'검사시작전') AS insThirdCheck
			,IFNULL(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_start_date, NULL)),'검사시작전') AS insStart
			,IFNULL(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_end_date, NULL)),'검사시작전') AS insEnd
			,IFNULL(ref.low_cate_final_pass_check,'심사중') AS finalPassCheck
		FROM
			requested_product_detail AS p
		INNER JOIN
			quality_inspection_request AS q ON p.requested_product_code = q.requested_product_code
		LEFT JOIN
			inspection_result AS re ON q.quality_inspection_request_code = re.quality_inspection_request_code
		LEFT JOIN
			inspection_final_result AS ref ON re.quality_inspection_request_code = ref.quality_inspection_request_code
		INNER JOIN
			inspection_standard AS res ON q.quality_inspection_code = res.quality_inspection_code
		INNER JOIN
			sub_class_inspection_list AS sub ON q.quality_inspection_code = sub.quality_inspection_code
		INNER JOIN
			low_class_inspection_list AS low ON sub.high_med_low_class_code = low.high_med_low_class_code
		INNER JOIN
			medium_class_inspection_list AS med ON low.high_med_class_code = med.high_med_class_code
		INNER JOIN
			high_class_inspection_list AS high ON med.high_class_code = high.high_class_code
		INNER JOIN
			product_code_detail AS pc ON p.product_code = pc.product_code
		INNER JOIN
			client_info AS c ON p.client_code = c.client_code
		 WHERE re.quality_inspection_request_code  LIKE 'QC%'
	GROUP BY q.quality_inspection_request_code;
</select>


</mapper>