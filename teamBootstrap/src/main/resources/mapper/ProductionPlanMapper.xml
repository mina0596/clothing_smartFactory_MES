<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart39.springboot.dao.ProductionPlanMapper">

<resultMap type="ProductionPlan" id="getProductionPlan">
	<result property="productionPlanCode" column="production_plan_code"/>
	<result property="productCode" column="product_code"/>
	<result property="chargeEmployeeCode" column="charge_employee_code"/>
	<result property="productionPlanQuantity" column="production_plan_quantity"/>
	<result property="productionPlanQantityUnit" column="production_plan_qantity_unit"/>
	<result property="expectedProductionStartDate" column="expected_production_start_date"/>
	<result property="expectedProductionEndDate" column="expected_production_end_date"/>
	<result property="productionPlanPeriod" column="production_plan_period"/>
	<result property="productionPlanNote" column="production_plan_note"/>
	<result property="productionPlanRegDate" column="production_plan_reg_date"/>
	<result property="productionPlanUpdateDate" column="production_plan_update_date"/>
</resultMap>

	<delete id="deleteProductionPlan" parameterType="String">
		DELETE 
			FROM 
				production_plan 
			WHERE 
				production_plan_code=#{delArr};
	</delete>

	<select id="searchProductionPlan" parameterType="hashmap" resultType="Map">
		SELECT 
			p.production_plan_code
			,d.gender_categorized_name
			,d.detailed_categorized_name
			,e.employee_name
			,p.production_plan_period
			,p.production_plan_qantity_unit
			,p.expected_production_start_date
			,p.expected_production_end_date
		FROM 
			production_plan AS p
			JOIN
			product_code_detail AS d
			ON p.product_code = d.product_code
			JOIN
			employee_info AS e
			ON p.charge_employee_code = e.employee_code	
	
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="genderCate != null and genderCate != ''.toString()">
			AND	d.gender_categorized_name = #{genderCate}
			</if>
			<if test="detailCate != null and detailCate != ''.toString()">
			AND	d.product_code = #{detailCate}
			</if>
			<if test="startDate != null and startDate != ''.toString()">
			AND	p.expected_production_start_date &gt;= DATE(#{startDate})
			</if>
			<if test="endDate != null and endDate != ''.toString()">
			AND	p.expected_production_end_date &lt;= DATE(#{endDate})
			</if>
		</trim>
		<trim prefix="ORDER BY" suffixOverrides="WHERE">
				p.expected_production_start_date ${range};
		</trim>
	</select>


	<update id="modifyProductionPlan" parameterType="ProductionPlan">


		UPDATE 
			production_plan
		SET
			product_code=#{productCode}
			,charge_employee_code=#{chargeEmployeeCode}
			,production_plan_quantity=#{productionPlanQuantity}
			,production_plan_qantity_unit=#{productionPlanQantityUnit}
			,expected_production_start_date=#{expectedProductionStartDate}
			,expected_production_end_date=#{expectedProductionEndDate}
			,production_plan_period=sf_productionPlanDate(#{expectedProductionStartDate},#{expectedProductionEndDate})
			,production_plan_note=#{productionPlanNote}
			,production_plan_update_date=NOW()
		WHERE 
			production_plan_code=#{productionPlanCode};
	</update>

	<select id="getProductionAllPlanList" resultType="Map" parameterType="String">
		SELECT 
			p.production_plan_code
			,c.gender_categorized_name
			,c.detailed_categorized_name
			,e.employee_name
			,p.production_plan_quantity
			,p.production_plan_qantity_unit
			,p.expected_production_start_date
			,p.expected_production_end_date
		FROM 
			production_plan AS p
		INNER JOIN
			product_code_detail AS c
		ON
			p.product_code = c.product_code
		INNER JOIn
			employee_info AS e
		ON 
			p.charge_employee_code = e.employee_code
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="planCode != null and planCode != ''.toString()">
				p.production_plan_code = #{planCode};
			</if>
		</trim>
	</select>

	<insert id="addProductionPlan" parameterType="ProductionPlan">
		INSERT INTO production_plan
			(production_plan_code
			,product_code
			,charge_employee_code
			,production_plan_quantity
			,production_plan_qantity_unit
			,expected_production_start_date
			,expected_production_end_date
			,production_plan_period
			,production_plan_note
			,production_plan_reg_date
			,production_plan_update_date)
			VALUES 
			(sf_productionPlanCode()
			,#{productCode}
			,#{chargeEmployeeCode}
			,#{productionPlanQuantity}
			,#{productionPlanQantityUnit}
			,#{expectedProductionStartDate}
			,#{expectedProductionEndDate}
			,sf_productionPlanDate(#{expectedProductionStartDate},#{expectedProductionEndDate})
			,#{productionPlanNote}
			,NOW()
			,NULL);
	</insert>
	
	<select id="getDetailCode" parameterType="String" resultType="Map">
		SELECT 
		   detailed_categorized_name
		   ,product_code
		FROM 
			product_code_detail
      	WHERE 
			gender_categorized_name = #{gender};
	</select>
	
	<select id="getProductCode" resultType="Map">
		SELECT 
			DISTINCT(gender_categorized_name)
		FROM 
			product_code_detail;
	</select>
</mapper>
