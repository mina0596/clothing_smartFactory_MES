<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart39.springboot.dao.QualityInsMeasurementValueMapper">

	<resultMap type="qualityInspectionRequest" 						id="qualityInspectionRequestResultMap">
		<result property="qualityInspectionRequestCode" 				column="quality_inspection_request_code"/>
		<result property="requestedProductCode" 						column="requested_product_code"/>
		<result property="qualityInspectionRequestEmployeeCode" 		column="quality_inspection_request_employee_code"/>
		<result property="qualityInspectionRequestApprovedEmployeeCode" column="quality_inspection_request_approved_employee_code"/>
		<result property="rawMaterialCode" 								column="raw_material_code"/>
		<result property="qualityInspectionCode" 						column="quality_inspection_code"/>
		<result property="samplingCheck" 								column="sampling_check"/>
		<result property="inspectioinSpecialRequest" 					column="inspectioin_special_request"/>
		<result property="inspectionRequestApproval" 					column="inspection_request_approval"/>
		<result property="requestedInspectionCompleteDate" 				column="requested_inspection_complete_date"/>
		<result property="inspectionRequestDate" 						column="inspection_request_date"/>
		<result property="inspectionRequestApprovalDate" 				column="inspection_request_approval_date"/>
		<result property="qualityInspectionRequestRegDate" 				column="quality_inspection_request_reg_date"/>
		<result property="qualityInspectionRequestUpdateDate" 			column="quality_inspection_request_update_date"/>
	</resultMap>
	
	<resultMap type="QualityBiochemFabricLevelStandard" 	id="QualityBiochemFabricLevelStandardResultMap">
		<result property="rawMaterialCode" 						column="raw_material_code" />
		<result property="qualityInspectionCode" 				column="quality_inspection_code" />
		<result property="minValue" 							column="min_value" />
		<result property="maxValue" 							column="max_value" />
		<result property="measuredLevel" 						column="measured_level" />
		<result property="biochemInspectionStandardRegDate" 	column="biochem_inspection_standard_reg_date" />
		<result property="biochemInspectionStandardUpdateDate" 	column="biochem_inspection_standard_update_date" />
	</resultMap>
	
	<resultMap type="QualityInspectionStandard" 			id="QualityInspectionStandardResultMap">
		<result property="qualityInspectionCode" 				column="quality_inspection_code"/>
		<result property="category" 							column="category"/>
		<result property="minValue" 							column="min_value"/>
		<result property="maxValue" 							column="max_value"/>
		<result property="method" 								column="method"/>
		<result property="standardMeasurementUnit" 				column="standard_measurement_unit"/>
		<result property="standardTolerance" 					column="standard_tolerance"/>
		<result property="requiredInspectionCheck" 				column="required_inspection_check"/>
		<result property="inspectionStandardRegDate" 			column="inspection_standard_reg_date"/>
		<result property="inspectionStandardUpdateDate" 		column="inspection_standard_update_date"/>
	</resultMap>
	
	<resultMap type="QualityInspectionResult" 			id="QualityInspectionResultMap">
		<result property="inspectionResultCode" 				column="inspection_result_code"/>
		<result property="qualityInspectionRequestCode" 		column="quality_inspection_request_code"/>
		<result property="chargeEmployeeCode" 					column="charge_employee_code"/>
		<result property="qualityInspectionCode" 				column="quality_inspection_code"/>
		<result property="inspectionMeasurementNum" 			column="inspection_measurement_num"/>
		<result property="inspectionMeasurementValue" 			column="inspection_measurement_value"/>
		<result property="inspectionMeasurementLevelResult" 	column="inspection_measurement_level_result"/>
		<result property="minTolerance" 						column="min_tolerance"/>
		<result property="maxTolerance" 						column="max_tolerance"/>
		<result property="errorRange" 							column="error_range"/>
		<result property="inspectionPassCheck" 					column="inspection_pass_check"/>
		<result property="inspectionStartDate" 					column="inspection_start_date"/>
		<result property="inspectionDuration" 					column="inspection_duration"/>
		<result property="inspectionEndDate" 					column="inspection_end_date"/>
		<result property="inspectionResultRegDate" 				column="inspection_result_reg_date"/>
		<result property="inspectionResultUpdateDate" 			column="inspection_result_update_date"/>
		<result property="rawMaterialCode" 						column="raw_material_code"/>
	</resultMap>
	
		
	<!-- [품질검사 측정값 현황] 품질검사 코드 검색 -->
	<select id="searchInspectionCode" resultType="QualityInspection" parameterType="QualityInspection">
		SELECT
			quality_inspection_code as qualityInspectionCode
			,high.high_class_name as highClassificationName
			,med.med_class_name as mediumClassificationName
			,low.low_class_name as lowClassificationName
			,sub.sub_class_name as subClassificationName
		from
				sub_class_inspection_list AS sub
		INNER JOIN
				low_class_inspection_list AS low ON sub.high_med_low_class_code = low.high_med_low_class_code
		INNER JOIN
				medium_class_inspection_list AS med ON low.high_med_class_code = med.high_med_class_code
		INNER JOIN
				high_class_inspection_list AS high ON med.high_class_code = high.high_class_code
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="highClassificationName != null and highClassificationName != ''.toString()">
				high.high_class_code=#{highClassificationName}
			</if>
			<if test="mediumClassificationName != null and mediumClassificationName != ''.toString()">
				AND med.high_med_class_code=#{mediumClassificationName}
			</if>
			<if test="lowClassificationName != null and lowClassificationName != ''.toString()">
				AND low.high_med_low_class_code=#{lowClassificationName};
			</if>
		</trim>
	</select>
	
	<!-- [품질검사 측정값 현황] 거래처 검색 -->
	<select id="searchByClientName" resultType="Map" parameterType="String">
		SELECT 
			ci.client_name AS clientName
		FROM 
			client_info AS ci
		INNER JOIN
			requested_product_detail AS r ON ci.client_code = r.client_code
		INNER JOIN
			contract_info AS co ON co.contract_code = r.contract_code
		<trim prefix="WHERE">
			<if test="clientName != null and clientName != ''.toString()">
				ci.client_name LIKE CONCAT ('%', #{clientName}, '%')
			</if>
		</trim>
		GROUP BY 
			ci.client_name;
	</select>
	
	<!-- [품질검사 측정값 현황] 계약번호 검색 -->
	<select id="searchByContractNum" resultType="Map" parameterType="Map">
		SELECT 
			co.contract_code AS contractCode
			,ci.client_name AS clientName
			,co.contracted_amount AS contractedAmount
			,co.contracted_date	AS contractedDate
		FROM 
			client_info AS ci
		INNER JOIN
			requested_product_detail AS r ON ci.client_code = r.client_code
		INNER JOIN
			contract_info AS co ON co.contract_code = r.contract_code
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="contractCode != null and contractCode != ''.toString()">
				 co.contract_code LIKE CONCAT ('%', #{contractCode}, '%')
			</if>
			<if test="clientName != null and clientName != ''.toString()">
				AND ci.client_name LIKE CONCAT ('%', #{clientName}, '%')
			</if>
			<if test="contractedStrartDate != null and contractedStrartDate != ''.toString()">
				AND co.contracted_date &gt;= DATE#{contractedStrartDate}
			</if>
			<if test="contractedEndDate != null and contractedEndDate != ''.toString()">
				AND co.contracted_date &lt;= DATE#{contractedEndDate}
			</if>
		</trim>
		GROUP BY 
			co.contract_code
		<trim prefix="ORDER BY" suffixOverrides="WHERE">
				co.contracted_date ${range};
		</trim>
	</select>
	
	<!-- [품질검사 측정값 현황] 실시간 검사 현황 리스트 위에 넣을 데이터들 -->
	<select id="getAllCount" resultType="Map" parameterType="String">
		SELECT
				DISTINCT 
					(select
		 				COUNT(*)
					 from
		 				inspection_result AS i
		 			WHERE
		 				i.inspection_measurement_num = '1회차') AS progressRate
					,
					(select
						COUNT(*)
						from
							inspection_final_result AS i
						WHERE 
							i.low_cate_final_pass_check='합격') AS finalPassCount
					,(select
						COUNT(*)
						from
							inspection_final_result AS i
						WHERE 
							i.low_cate_final_pass_check='불합격') AS finalFailCount
					,(SELECT
						COUNT(*)
						FROM
						quality_inspection_request AS q) AS requestCount
					,(SELECT
						COUNT(*)
						FROM
						inspection_final_result AS f) AS finalCompleteCount
		FROM
			quality_inspection_request AS aa
		WHERE
			aa.requested_product_code IN (SELECT 
												bb.requested_product_code 
											FROM 
												requested_product_detail AS bb 
												WHERE bb.contract_code = #{contractNum})
	</select>
	
	<!-- [품질검사 측정값 현황] 전체 합/불별 건수 -->
	<select id="getPassOrFailCount" resultType="Map" parameterType="String">
		SELECT
			COUNT(case when ref.low_cate_final_pass_check='합격' then 1 end) AS pass
			,COUNT(case when ref.low_cate_final_pass_check='불합격' then 1 end) AS fail
		FROM
			requested_product_detail AS p
		INNER JOIN
			quality_inspection_request AS q ON p.requested_product_code = q.requested_product_code
		LEFT JOIN
			inspection_final_result AS ref ON q.quality_inspection_request_code = ref.quality_inspection_request_code
		WHERE
			p.contract_code = #{contractNum};
	</select>
	
	<!-- [품질검사 측정값 현황] 공정별 불량건수 -->
	<select id="getFailCountByHighInspection" resultType="Map" parameterType="String">
		SELECT
			COUNT(case when SUBSTRING(ref.quality_inspection_code,1,3)='A01' then 1 end) AS A01
			,COUNT(case when SUBSTRING(ref.quality_inspection_code,1,3)='A02' then 1 end) AS A02
			,COUNT(case when SUBSTRING(ref.quality_inspection_code,1,3)='A03' then 1 end) AS A03
		FROM
			requested_product_detail AS p
		INNER JOIN
			quality_inspection_request AS q ON p.requested_product_code = q.requested_product_code
		LEFT JOIN
			inspection_final_result AS ref ON q.quality_inspection_request_code = ref.quality_inspection_request_code
		WHERE
			p.contract_code = #{contractNum}
		AND
			ref.low_cate_final_pass_check='불합격';	
	</select>
	
	<!-- [품질검사 측정값 현황] 품질검사 현황 -->
	<select id="getQualityInspectionStatusNow" resultType="Map" parameterType="Map">
		SELECT
			re.quality_inspection_request_code AS inspectionRequestCode
			,high.high_class_name AS highClassName
			,med.med_class_name AS medClassName
			,low.low_class_name AS lowClassName
			,sub.sub_class_name AS subClassName
			,p.requested_product_code AS requestProductCode
			,pc.detailed_categorized_name AS detailedCateName
			,q.inspection_request_date AS inspectionRequestDate
			,res.category AS inspectionCategory
			,ifnull(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_pass_check, NULL)),'심사중') AS insFirst
			,ifnull(group_concat(if(re.inspection_measurement_num='2회차', re.inspection_pass_check, NULL)),'심사중') AS insSecond
			,ifnull(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_pass_check, NULL)),'심사중') AS insThird	
			,ifnull(group_concat(if(re.inspection_measurement_num='1회차', re.inspection_start_date, NULL)),'시작전') AS insStart
			,ifnull(group_concat(if(re.inspection_measurement_num='3회차', re.inspection_end_date, NULL)),'종료전') AS insEnd
			,IFNULL(ref.low_cate_final_pass_check,'종료전') AS finalPassCheck
			,p.contract_code AS contractCode		
		FROM
			requested_product_detail AS p
		INNER JOIN
			quality_inspection_request AS q ON p.requested_product_code = q.requested_product_code
		LEFT JOIN
			inspection_result AS re ON q.quality_inspection_request_code = re.quality_inspection_request_code
		LEFT JOIN
			inspection_final_result AS ref ON re.quality_inspection_request_code = ref.quality_inspection_request_code
		INNER JOIN
			inspection_standard AS res ON q.quality_inspection_code = res.quality_inspection_code
		INNER JOIN
			sub_class_inspection_list AS sub ON q.quality_inspection_code = sub.quality_inspection_code
		INNER JOIN
			low_class_inspection_list AS low ON sub.high_med_low_class_code = low.high_med_low_class_code
		INNER JOIN
			medium_class_inspection_list AS med ON low.high_med_class_code = med.high_med_class_code
		INNER JOIN
			high_class_inspection_list AS high ON med.high_class_code = high.high_class_code
		INNER JOIN
			product_code_detail AS pc ON p.product_code = pc.product_code
		INNER JOIN
			client_info AS c ON p.client_code = c.client_code
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="contractNum != null and contractNum != ''.toString()">
				p.contract_code = #{contractNum}
			</if>
			<if test="clientName != null and clientName != ''.toString()">
				AND c.client_name LIKE CONCAT ('%', #{clientName} ,'%')
			</if>		
			<if test="requestStartDate != null and requestStartDate != ''.toString()">
				AND q.inspection_request_date &gt;= DATE(#{requestStartDate})
			</if>
			<if test="requestEndDate != null and requestEndDate != ''.toString()">
				AND q.inspection_request_date &lt;= DATE(#{requestEndDate})
			</if>
			<if test="genderCate != null and genderCate != ''.toString()">
				AND pc.gender_categorized_name LIKE CONCAT ('%', #{genderCate} ,'%')
			</if>		
			<if test="productCode != null and productCode != ''.toString()">
				AND pc.product_code LIKE CONCAT ('%', #{productCode} ,'%')
			</if>		
			<if test="inspectionCode != null and inspectionCode != ''.toString()">
				AND sub.quality_inspection_code LIKE CONCAT ('%', #{inspectionCode} ,'%')
			</if>		
			<if test="startDate != null and startDate != ''.toString()">
				AND re.inspection_start_date &gt;= DATE(#{startDate})
			</if>
			<if test="endDate != null and endDate != ''.toString()">
				AND re.inspection_start_date &lt;= DATE(#{endDate})
			</if>			
		</trim>		 		
		GROUP BY q.quality_inspection_request_code;
	</select>
	
	<!-- [품질검사 측정값 목록] 품질검사 측정값 목록 -->
	<select id="getInspectionMeasurementValueList" resultMap="QualityInspectionResultMap">
		SELECT 
			inspection_result_code
			,quality_inspection_request_code
			,charge_employee_code
			,quality_inspection_code
			,raw_material_code
			,inspection_measurement_num
			,inspection_measurement_value
			,inspection_measurement_level_result
			,min_tolerance
			,max_tolerance
			,error_range
			,inspection_pass_check
			,inspection_start_date
			,inspection_duration
			,inspection_end_date
			,inspection_result_reg_date
			,inspection_result_update_date
		FROM 
			inspection_result AS i
		GROUP BY i.quality_inspection_request_code;
	</select>
	
	<!-- [품질검사 측정값 등록] 품질검사 측정값 등록 -->
	<insert id="addQualityRawMaterialInspectionResult" parameterType="QualityInspectionResult">
		INSERT INTO inspection_result
			(
			inspection_result_code
			,quality_inspection_request_code
			,charge_employee_code
			,quality_inspection_code
			,raw_material_code
			,inspection_measurement_num
			,inspection_measurement_value
			,inspection_measurement_level_result
			,min_tolerance
			,max_tolerance
			,error_range
			,inspection_pass_check
			,inspection_start_date
			,inspection_duration
			,inspection_end_date
			,inspection_result_reg_date
			,inspection_result_update_date
			)VALUES(
			sf_qualityInspectionResultCode(#{qualityInspectionRequestCode})
			,#{qualityInspectionRequestCode}
			,#{chargeEmployeeCode}
			,#{qualityInspectionCode}
			,#{rawMaterialCode}
			,sf_inspectionMeasurementNum(#{qualityInspectionRequestCode})
			,#{inspectionMeasurementValue}
			,#{inspectionMeasurementLevelResult}
			,#{minTolerance}
			,#{maxTolerance}
			,#{errorRange}
			,#{inspectionPassCheck}
			,#{inspectionStartDate}
			,sf_minuteDuration(#{inspectionStartDate},#{inspectionEndDate})
			,#{inspectionEndDate}
			,NOW()
			,NULL
			);
			
	</insert>
	
	<!-- [품질검사 측정값 등록] 품질검사 수치별 등록 기준값 가져오기 -->
	<select id="getQualityInspectionStandardByNumber" parameterType="String" resultType="Map">
		SELECT
			s.quality_inspection_code
			,s.measurement_part
			,ps.measured_value
		FROM
			required_size_list AS s
		INNER JOIN
			requested_product_size AS ps ON s.required_size_code = ps.required_size_code
		INNER JOIN
			requested_product_detail AS p ON ps.requested_product_code = p.requested_product_code
		WHERE
			s.quality_inspection_code = #{qualityInspectionCode}
		AND
			ps.requested_product_code = (SELECT
															r.requested_product_code
														FROM
															requested_product_detail AS r
														INNER JOIN
															quality_inspection_request AS q ON r.requested_product_code = q.requested_product_code
														WHERE 
															q.quality_inspection_request_code = #{qualityInspectionRequestCode})
		GROUP BY s.quality_inspection_code;
	</select>
	
	<!-- [품질검사 측정값 등록] 품질검사 측정값 기준치 -->
	<select id="getQualityInspectionStandard" parameterType="String" resultMap="QualityInspectionStandardResultMap" >
		SELECT 
			quality_inspection_code
			,category
			,min_value
			,max_value
			,method
			,standard_measurement_unit
			,standard_tolerance
			,required_inspection_check
			,inspection_standard_reg_date
			,inspection_standard_update_date
		FROM
			inspection_standard AS i
		WHERE 
			i.quality_inspection_code = #{qualityInspectionCode};
	</select>
	
	<!-- [품질검사 측정값 등록] 품질검사 원부자재 기준치 목록 -->
	<select id="getBiochemFabricLevelStandard" parameterType="QualityInspectionResult" resultMap="QualityBiochemFabricLevelStandardResultMap">
		SELECT 
			raw_material_code
			,quality_inspection_code
			,min_value
			,max_value
			,measured_level
			,biochem_inspection_standard_reg_date
			,biochem_inspection_standard_update_date
		FROM 
			biochem_fabric_level_standard AS b
		WHERE
			b.quality_inspection_code = #{qualityInspectionCode}
			AND
			b.raw_material_code = #{rawMaterialCode};
	</select>
	
	<!-- [품질검사 측정값 등록] 품질검사 요청목록 목록 -->
	<select id="searchQualityInspectionRequest" resultType="Map" parameterType="Map">
		SELECT
			q.quality_inspection_request_code
			,q.requested_product_code
			,r.contract_code
			,h.high_class_name
			,md.med_class_name
			,s.quality_inspection_code
			,s.sub_class_name
			,q.raw_material_code
			,m.raw_material_name
			,q.inspection_request_date
			,c.client_name
		FROM
			quality_inspection_request AS q INNER JOIN requested_product_detail AS r ON q.requested_product_code = r.requested_product_code
			INNER JOIN sub_class_inspection_list AS s ON q.quality_inspection_code = s.quality_inspection_code
			INNER JOIN medium_class_inspection_list AS md ON s.high_med_class_code = md.high_med_class_code
			INNER JOIN high_class_inspection_list AS h ON md.high_class_code = h.high_class_code
			LEFT JOIN raw_material_info AS m ON q.raw_material_code = m.raw_material_code
			LEFT JOIN client_info AS c ON r.client_code = c.client_code
			LEFT JOIN inspection_result AS re ON q.quality_inspection_request_code = re.quality_inspection_request_code
		<trim prefix="WHERE" prefixOverrides="AND">
			AND 
			q.quality_inspection_request_code NOT IN 
				( select
					ins.quality_inspection_request_code
					from
					 inspection_result AS ins
					WHERE 
						ins.inspection_measurement_num='3회차')
			<if test="contractCode != null and contractCode != ''.toString()">
				AND	r.contract_code LIKE CONCAT('%', #{contractCode} ,'%')
			</if>
			<if test="requestedProductCode != null and requestedProductCode != ''.toString()">
				AND q.requested_product_code LIKE CONCAT('%', #{requestedProductCode} ,'%')
			</if>
			<if test="inspectionRequestStartDate != null and inspectionRequestStartDate != ''.toString()">
				AND q.inspection_request_date &gt;= DATE(#{inspectionRequestStartDate})
			</if>
			<if test="inspectionRequestEndDate != null and inspectionRequestEndDate != ''.toString()">
				AND	q.inspection_request_date &lt;= DATE(#{inspectionRequestEndDate})
			</if>
			<if test="subClassName != null and subClassName != ''.toString()">
				AND s.sub_class_name LIKE CONCAT('%', #{subClassName} ,'%')
			</if>
			<if test="rawMaterialName != null and rawMaterialName != ''.toString()">
				AND m.raw_material_name LIKE CONCAT('%', #{rawMaterialName} ,'%')
			</if>
			<if test="clientName != null and clientName != ''.toString()">
				AND c.client_name LIKE CONCAT('%', #{clientName} ,'%')
			</if>
				GROUP BY q.quality_inspection_request_code;
		</trim>
	</select>
	
	<!-- [품질검사 요청 목록] 품질검사 요청 목록 -->
	<select id="getQualityInspectionRequestList" resultType="Map">
		SELECT
			q.quality_inspection_request_code  AS qir
			,p.contract_code								AS cc
			,q.requested_product_code				AS rpc
			,q.quality_inspection_code				AS qic
			,sub.sub_class_name						AS scn
			,q.sampling_check							AS sc
			,q.inspection_request_approval		AS ira
			,q.inspection_request_date				AS ird
		FROM
			quality_inspection_request AS q
		INNER JOIN
			requested_product_detail AS p ON q.requested_product_code = p.requested_product_code
		INNER JOIN
			sub_class_inspection_list AS sub ON q.quality_inspection_code = sub.quality_inspection_code;
	</select>
	
	<update id="approvalInspectionRequest" parameterType="String">
		UPDATE 
			quality_inspection_request
		SET
			inspection_request_approval = '승인'
		WHERE 
			quality_inspection_request_code = #{qualityInspectionRequestCode};	
	</update>
	
	<!-- [품질검사 요청] 품질검사 단일 요청-->
	<insert id="qualityInspectionRequest" parameterType="qualityInspectionRequest">
		INSERT INTO quality_inspection_request(
			quality_inspection_request_code
			,requested_product_code
			,quality_inspection_request_employee_code
			,quality_inspection_request_approved_employee_code
			,raw_material_code
			,quality_inspection_code
			,sampling_check
			,inspectioin_special_request
			,inspection_request_approval
			,requested_inspection_complete_date	
			,inspection_request_date
			,inspection_request_approval_date
			,quality_inspection_request_reg_date
			,quality_inspection_request_update_date
			)VALUES (
			sf_qualityInspectionRequestCode()
			,#{requestedProductCode}
			,#{qualityInspectionRequestEmployeeCode}
			,#{qualityInspectionRequestApprovedEmployeeCode}
			,#{rawMaterialCode}
			,#{qualityInspectionCode}
			,#{samplingCheck}
			,#{inspectioinSpecialRequest}
			,#{inspectionRequestApproval}
			,#{requestedInspectionCompleteDate}
			,NOW()
			,NULL
			,NOW()
			,NULL)
	</insert>
	
	<!-- [품질검사 요청] 계약번호로 품목별 의뢰코드 검색 -->
	<select id="searchRequestProductCode" parameterType="String" resultType="Map">
		SELECT 
			r.requested_product_code
		FROM 
			requested_product_detail AS r
		LEFT JOIN
			completed_product_list AS c ON r.requested_product_code = c.requested_product_code
		WHERE
			r.contract_code = #{contractCode}
		AND
			c.requested_product_code IS NULL;
	</select>
	
	<!-- [품질검사 요청] 품질검사 세부 코드 검색 -->
	<select id="subClassCate" parameterType="String" resultType="Map">
		SELECT 
			quality_inspection_code
			,sub_class_name
		FROM 
			sub_class_inspection_list AS sub
		WHERE 
				sub.high_med_low_class_code = #{lowClassCateName};	
	</select>
</mapper>