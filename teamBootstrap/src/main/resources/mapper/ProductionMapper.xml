<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ksmart39.springboot.dao.ProductionMapper">
	<resultMap type="RequestedProduct" id="requestedProductResultMap">
		<result property="requestedProductCode"			column="requested_product_code"/>
		<result property="clientCode"					column="client_code"/>
		<result property="contractCode"					column="contract_code"/>
		<result property="contractCode"					column="contract_code"/>
		<result property="productRequestCode"			column="requested_product_detail_reg_date"/>
		<result property="approvalStatus"				column="approval_status"/>
		<association property="client"	javaType="Client">
			<id property="clientCode"					column="client_code"/>
			<result property="clientName"				column="client_name"/>
		</association>
	</resultMap>
	
	<!-- 생산 프로세스 이름 -->
	<resultMap type="ProductionProcessList" 						id="processNameResultMap">
		<result property="productionProcessCode"					column="production_process_code"/>
		<result property="productionProcessHighClassification"		column="production_process_high_classification"/>
		<result property="productionProcessLowClassification"		column="production_process_low_classification"/>
		<result property="processOrderNum"							column="process_order_num"/>
	</resultMap>
	
	
	<select id="getProductionMonthlyPlanList" resultType="ProductionPlan">
		SELECT 
			production_plan_code
			,gender_categorized_name
			,detailed_categorized_name
			,charge_employee_code
			,charge_employee_name
			,production_plan_quantity
			,production_plan_qantity_unit
			,expected_production_start_date
			,expected_production_end_date
			,production_plan_period
			,production_plan_note
			,production_plan_reg_date
			,production_plan_update_date
		FROM 
			production_plan;
	</select>

	<select id="getDetailCode" parameterType="String" resultType="map">
		SELECT 
		   detailed_categorized_name
		FROM 
			product_code_detail
      	WHERE 
			gender_categorized_name = #{gender};
	</select>
	
	<select id="getProductCode" resultType="map">
		SELECT 
			DISTINCT(gender_categorized_name)
		FROM 
			product_code_detail;
	</select>
	
	
	<!-- ====================[민아]완제품 품목 등록========================= -->
	<insert id="addCompletedProduct" parameterType="map">
		INSERT INTO 
			completed_product_list(
				requested_product_code, 
				production_start_date, 
				production_finish_date, 
				completed_product_reg_date, 
				completed_product_update_date)
		VALUES(
			#{productCode}, 
			#{startedDate}, 
			#{finishedDate}, 
			NOW(), 
			NOW());	
	</insert>
	
	<insert id="startProduction" parameterType="String">
		INSERT INTO 
			product_production_process_status(
				production_process_code, 
				requested_product_code, 
				process_start_date, 
				completed_product_update_date, 
				process_status, 
				production_process_status_reg_date)
			VALUES(
				'process_01', 
				#{pCode}, 
				NOW(), 
				null, 
				'진행중', 
				NOW());
	</insert>
	
	<!-- ===================의뢰 품목별 생산현황 조회 modal에서 거래처명 조회====================== -->
	<select id="searchClientName" resultType="map" parameterType="map">
		SELECT 
			rpd.requested_product_code	AS pCode,
			rpd.contract_code			AS contractCode,
			rpd.client_code				AS clientCode, 
			ci.client_name				AS clientName,		
			rpd.approval_status			AS approvalStatus, 
			rpd.requested_product_detail_reg_date	AS regDate
		FROM 
			requested_product_detail AS rpd
			INNER join
			client_info AS ci
			on
			rpd.client_code = ci.client_code
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="clientCode != null and clientCode != ''.toString()">
				AND	rpd.client_code LIKE CONCAT('%', #{clientCode} ,'%')
			</if>
			<if test="clientName != null and clientName != ''.toString()">
				AND	ci.client_Name LIKE CONCAT('%', #{clientName} ,'%')
			</if>
			<if test="contractCode != null and contractCode != ''.toString()">
				AND rpd.contract_code LIKE CONCAT('%', #{contractCode} ,'%')
			</if>
			<if test="requestRegDateFrom != null and requestRegDateFrom != ''.toString()">
				AND rpd.requested_product_detail_reg_date &gt;= DATE(#{requestRegDateFrom})
			</if>
			<if test="requestRegDateTo != null and requestRegDateTo != ''.toString()">
				AND	rpd.requested_product_detail_reg_date &lt;= DATE(#{requestRegDateTo})
			</if>
			<if test="contractAcceptCheck != null and contractAcceptCheck != ''.toString()">
				AND rpd.approval_status LIKE CONCAT('%', #{contractAcceptCheck} ,'%')
			</if>
		</trim>
	</select>
	
	<!-- ============================의뢰 품목별 생산현황 조회================================== -->
	<select id="searchProductToStart" resultType="map" parameterType="map">
		SELECT 
			pps.production_process_code						AS processCode, 
			pps.requested_product_code						AS productCode, 
			pps.process_start_date							AS processStartDate, 
			pps.completed_product_update_date				AS processFinishDate, 
			pps.process_status								AS processStatus, 
			rpd.client_code									AS clientCode,
			c.client_name									AS clientName,
			rpd.requested_due_date							AS dueDate,
			pd.gender_categorized_name						AS suitType,
			pd.detailed_categorized_name					AS productType,
			detail.production_process_high_classification	AS highClassName,
			detail.production_process_low_classification	AS lowClassName,
			detail.process_order_num						AS orderNum
		FROM
			product_production_process_status AS pps
			INNER join
			requested_product_detail AS rpd
			on
			pps.requested_product_code = rpd.requested_product_code
			INNER join
			product_code_detail AS pd
			on
			pd.product_code = rpd.product_code
			INNER join
			client_info AS c
			ON 
			rpd.client_code = c.client_code
			INNER join
			production_process_list AS detail
			on
			pps.production_process_code = detail.production_process_code
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="suitType != null and suitType != ''.toString()">
				AND	pd.gender_categorized_name LIKE CONCAT('%', #{suitType} ,'%')
			</if>
			<if test="productType != null and productType != ''.toString()">
				AND	pd.detailed_categorized_name LIKE CONCAT('%', #{productType} ,'%')
			</if>
			<if test="clientCode != null and clientCode != ''.toString()">
				AND rpd.client_code LIKE CONCAT('%', #{clientCode} ,'%')
			</if>
			<if test="DateType == 'dueDate' and fromDate != null and fromDate != ''.toString()">
				<![CDATA[
				AND rpd.requested_due_date >= #{fromDate}
				]]>
			</if>
			<if test="DateType == 'dueDate' and toDate != null and toDate != ''.toString()">
				<![CDATA[
				AND rpd.requested_due_date <= #{toDate}
				]]>
			</if>
			<if test="DateType == 'startDate' and fromDate != null and fromDate != ''.toString()">
				<![CDATA[
				AND pps.process_start_date >= #{fromDate}
				]]>
			</if>
			<if test="DateType == 'startDate' and toDate != null and toDate != ''.toString()">
				<![CDATA[
				AND pps.process_start_date <= #{toDate}
				]]>
			</if>
		</trim>
	</select>
	
	<select id="getProcessDetails" parameterType="String" resultMap="processNameResultMap">
		SELECT 
			production_process_code, 
			production_process_high_classification, 
			production_process_low_classification, 
			process_order_num
		FROM 
			production_process_list
		WHERE
			production_process_code = #{processCode};
	</select>
	

</mapper>